{
  "<code>auth</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>n</code></td><td><i>number</i></td><td><p>the number of characters to take from the name, 0 = all</p></td><td><code>0</code> </td></tr>\n<tr><td><code>m</code></td><td><i>number</i></td><td><p>select the <code>m</code>th author</p></td><td><code>1</code> </td></tr>\n<tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The first <code>n</code> (default: all) characters of the <code>m</code>th (default: first) author's last name. </p>",
  "<code>authAuthEa</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\".\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The last name of the first two authors, and \".ea\" if there are more than two. </p>",
  "<code>authEtAl</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\" \"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The last name of the first author, and the last name of the second author if there are two authors or \"EtAl\" if there are more than two. This is similar to <code>auth.etal</code>. The difference is that the authors are not separated by \".\" and in case of more than 2 authors \"EtAl\" instead of \".etal\" is appended. </p>",
  "<code>authEtal2</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\".\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The last name of the first author, and the last name of the second author if there are two authors or \".etal\" if there are more than two. </p>",
  "<code>authForeIni</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The given-name initial of the first author. </p>",
  "<code>authIni</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>n</code></td><td><i>number</i></td><td><p>the number of characters to take from the name, 0 = all</p></td><td><code>0</code> </td></tr>\n<tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\".\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The beginning of each author's last name, using no more than <code>n</code> characters (0 = all). </p>",
  "<code>authorIni</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\".\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The first 5 characters of the first author's last name, and the last name initials of the remaining authors. </p>",
  "<code>authorLast</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The last name of the last author </p>",
  "<code>authorLastForeIni</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The given-name initial of the last author. </p>",
  "<code>authors</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>n</code></td><td><i>number</i> / [<i>number</i>, <i>number</i>]</td><td><p>select the first <code>n</code> authors (when passing a number) or the authors in this range (inclusive, when passing two values); negative numbers mean \"from the end\", default = 0 = all</p></td><td><code>0</code> </td></tr>\n<tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>select type of creator (<code>author</code> or <code>editor</code>)</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>name</code></td><td>a creator sprintf template with one or more of the variables <code>f</code> (family name) / <code>g</code> (given name) / <code>i</code> (first initial) / <code>I</code> (all initials)</td><td><p>sprintf-js template. Available named parameters are: <code>f</code> (family name), <code>g</code> (given name), <code>i</code> (initials)</p></td><td><code>\"%(f)s\"</code> </td></tr>\n<tr><td><code>etal</code></td><td><i>string</i></td><td><p>use this term to replace authors after <code>n</code> authors have been named</p></td><td><code>\"\"</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\" \"</code> </td></tr>\n<tr><td><code>min</code></td><td><i>number</i></td><td><p>skip to the next pattern if there are less than <code>min</code> creators, 0 = ignore</p></td><td><code>0</code> </td></tr>\n<tr><td><code>max</code></td><td><i>number</i></td><td><p>skip to the next pattern if there are more than <code>max</code> creators, 0 = ignore</p></td><td><code>0</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>Author/editor information. </p>",
  "<code>authorsAlpha</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\" \"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>Corresponds to the BibTeX style \"alpha\". One author: First three letters of the last name. Two to four authors: First letters of last names concatenated. More than four authors: First letters of last names of first three authors concatenated. \"+\" at the end. </p>",
  "<code>authshort</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>creator</code></td><td><code>author</code> / <code>editor</code> / <code>translator</code> / <code>collaborator</code> / <code>*</code></td><td><p>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</p></td><td><code>\"*\"</code> </td></tr>\n<tr><td><code>initials</code></td><td><i>boolean</i></td><td><p>add author initials</p></td><td><code>false</code> </td></tr>\n<tr><td><code>sep</code></td><td><i>string</i></td><td><p>use this character between authors</p></td><td><code>\".\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The last name if one author/editor is given; the first character of up to three authors' last names if more than one author is given. A plus character is added, if there are more than three authors. </p>",
  "<code>date</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>format</code></td><td><i>string</i></td><td><p>sprintf-style format template</p></td><td><code>\"%Y-%m-%d\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The date of the publication </p>",
  "<code>extra</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>variable</code></td><td><i>string</i></td><td><p>extra-field line identifier</p></td><td></td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>A pseudo-field from the extra field. eg if you have <code>Original date: 1970</code> in your <code>extra</code> field, you can get it as <code>extra(originalDate)</code>, or <code>tex.shortauthor: APA</code> which you could get with <code>extra('tex.shortauthor')</code>. Any <code>tex.</code> field will be picked up, the other fields can be selected from <a href=\"https://retorque.re/zotero-better-bibtex/exporting/extra-fields/\">this list</a> of key names. </p>",
  "<code>firstpage</code>": "<p>The number of the first page of the publication (Caution: this will return the lowest number found in the pages field, since BibTeX allows <code>7,41,73--97</code> or <code>43+</code>.) </p>",
  "<code>infix</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>format</code></td><td><i>string</i></td><td><p>sprintf-style format template</p></td><td><code>\"%(a)s\"</code> </td></tr>\n<tr><td><code>start</code></td><td><i>number</i></td><td><p>start value for postfix</p></td><td><code>0</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>a pseudo-function that sets the citekey disambiguation infix using an <a href=\"https://www.npmjs.com/package/sprintf-js\">sprintf-js</a> format spec for when a key is generated that already exists. The infix charachter appears at the place of this function of the formula instead of at the and (as postfix does). You <em>must</em> include <em>exactly one</em> of the placeholders <code>%(n)s</code> (number), <code>%(a)s</code> (alpha, lowercase) or <code>%(A)s</code> (alpha, uppercase). For the rest of the disambiguator you can use things like padding and extra text as sprintf-js allows. With start set to <code>1</code> the disambiguator is always included, even if there is no need for it when no duplicates exist. The default  format is <code>%(a)s</code>. </p>",
  "<code>inspireHep</code>": "<p>Fetches the key from inspire-hep based on DOI or arXiv ID </p>",
  "<code>item</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>id</code></td><td><code>id</code> / <code>key</code></td><td><code>\"key\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>returns the internal item ID/key </p>",
  "<code>journal</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>abbrev</code></td><td><code>abbrev</code> / <code>abbrev+auto</code> / <code>auto</code> / <code>full</code> / <code>off</code></td><td><p>abbreviation mode</p></td><td><code>\"abbrev+auto\"</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>returns the journal abbreviation, or, if not found, the journal title, If 'automatic journal abbreviation' is enabled in the BBT settings, it will use the same abbreviation filter Zotero uses in the wordprocessor integration. You might want to use the <code>abbr</code> filter on this. Abbreviation behavior can be specified as <code>abbrev+auto</code> (the default) which uses the explicit journal abbreviation if present, and tries the automatic abbreviator if not (if auto-abbrev is enabled in the preferences), <code>auto</code> (skip explicit journal abbreviation even if present), <code>abbrev</code> (no auto-abbrev even if it is enabled in the preferences) or <code>full</code>/<code>off</code> (no abbrevation). </p>",
  "<code>keyword</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>n</code></td><td><i>number</i></td><td></td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>Tag number <code>n</code>. Mostly for legacy compatibility -- order of tags is undefined </p>",
  "<code>language</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>name</code></td><td><code>ame</code> / <code>american</code> / <code>american english</code> / <code>americanenglish</code> / <code>ar</code> / <code>ar-ar</code> / <code>ar-dz</code> / <code>ar-eg</code> / <code>ar-iq</code> / <code>ar-jo</code> / <code>ar-lb</code> / <code>ar-ma</code> / <code>ar-ps</code> / <code>ar-sa</code> / <code>ar-sy</code> / <code>ar-tn</code> / <code>ara</code> / <code>arabic</code> / <code>arabic-algeria</code> / <code>arabic-dz</code> / <code>arabic-eg</code> / <code>arabic-egypt</code> / <code>arabic-iq</code> / <code>arabic-iraq</code> / <code>arabic-jo</code> / <code>arabic-jordan</code> / <code>arabic-lb</code> / <code>arabic-lebanon</code> / <code>arabic-ma</code> / <code>arabic-morocco</code> / <code>arabic-palestinianterritories</code> / <code>arabic-ps</code> / <code>arabic-sa</code> / <code>arabic-saudiarabia</code> / <code>arabic-sy</code> / <code>arabic-syria</code> / <code>arabic-tn</code> / <code>arabic-tunisia</code> / <code>australian</code> / <code>australian english</code> / <code>australianenglish</code> / <code>austrian</code> / <code>austrian german</code> / <code>austrian-traditional</code> / <code>austriangerman</code> / <code>austriangerman-traditional</code> / <code>bri</code> / <code>british</code> / <code>british english</code> / <code>britishenglish</code> / <code>canadian</code> / <code>canadian english</code> / <code>canadianenglish</code> / <code>chinese</code> / <code>chinese-hans</code> / <code>chinese-hans-hk</code> / <code>chinese-hans-mo</code> / <code>chinese-hans-sg</code> / <code>chinese-hant</code> / <code>chinese-hant-hk</code> / <code>chinese-hant-mo</code> / <code>chinese-simplified</code> / <code>chinese-simplified-hongkongsarchina</code> / <code>chinese-simplified-macausarchina</code> / <code>chinese-simplified-singapore</code> / <code>chinese-traditional</code> / <code>chinese-traditional-hongkongsarchina</code> / <code>chinese-traditional-macausarchina</code> / <code>de</code> / <code>de-1901</code> / <code>de-1996</code> / <code>de-at</code> / <code>de-at-1901</code> / <code>de-at-1996</code> / <code>de-ch</code> / <code>de-ch-1901</code> / <code>de-ch-1996</code> / <code>de-de</code> / <code>deutsch</code> / <code>en</code> / <code>en-au</code> / <code>en-ca</code> / <code>en-en</code> / <code>en-gb</code> / <code>en-nz</code> / <code>en-us</code> / <code>eng</code> / <code>english</code> / <code>english-au</code> / <code>english-australia</code> / <code>english-ca</code> / <code>english-canada</code> / <code>english-gb</code> / <code>english-newzealand</code> / <code>english-nz</code> / <code>english-unitedkingdom</code> / <code>english-unitedstates</code> / <code>english-us</code> / <code>ger</code> / <code>german</code> / <code>german-at</code> / <code>german-at-traditional</code> / <code>german-austria</code> / <code>german-austria-traditional</code> / <code>german-ch</code> / <code>german-ch-traditional</code> / <code>german-switzerland</code> / <code>german-switzerland-traditional</code> / <code>german-traditional</code> / <code>ja</code> / <code>ja-ja</code> / <code>jap</code> / <code>japanese</code> / <code>nau</code> / <code>naustrian</code> / <code>newzealand</code> / <code>nge</code> / <code>ngerman</code> / <code>nsw</code> / <code>nswissgerman</code> / <code>schweizer hochdeutsch</code> / <code>simplified chinese</code> / <code>swiss high german</code> / <code>swisshighgerman</code> / <code>swisshighgerman-traditional</code> / <code>traditional chinese</code> / <code>tw</code> / <code>ukenglish</code> / <code>usenglish</code> / <code>zh</code> / <code>zh-hans</code> / <code>zh-hans-hk</code> / <code>zh-hans-mo</code> / <code>zh-hans-sg</code> / <code>zh-hant</code> / <code>zh-hant-hk</code> / <code>zh-hant-mo</code> / <code>zh-tw</code> / <code>zh-zh</code> / <code>österreichisches deutsch</code> / <code>العربية</code> / <code>中文</code> / <code>中文-中文</code> / <code>日本語</code> / <code>简体中文</code> / <code>繁體中文</code></td><td><p>one or more language codes</p></td><td></td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>Tests whether the item has the given language set, and skips to the next pattern if not </p>",
  "<code>lastpage</code>": "<p>The number of the last page of the publication (See the remark on <code>firstpage</code>) </p>",
  "<code>len</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>relation</code></td><td><code>!=</code> / <code><</code> / <code><=</code> / <code>=</code> / <code>></code> / <code>>=</code></td><td><p>comparison operator</p></td><td><code>\">\"</code> </td></tr>\n<tr><td><code>length</code></td><td><i>number</i></td><td><p>value to compare length with</p></td><td><code>0</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>If the length of the output does not match the given number, skip to the next pattern. </p>",
  "<code>library</code>": "<p>returns the name of the shared group library, or nothing if the item is in your personal library </p>",
  "<code>month</code>": "<p>the month of the publication </p>",
  "<code>origdate</code>": "<p>the original date of the publication </p>",
  "<code>origyear</code>": "<p>the original year of the publication </p>",
  "<code>postfix</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>format</code></td><td>a postfix sprintf template with one or more of the variables <code>a</code> (alpha postfix) / <code>A</code> (alpha postfix uppercase) / <code>n</code> (numeric postfix)</td><td><p>sprintf-style format template</p></td><td><code>\"%(a)s\"</code> </td></tr>\n<tr><td><code>start</code></td><td><i>number</i></td><td><p>start value for postfix</p></td><td><code>0</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>a pseudo-function that sets the citekey disambiguation postfix using an <a href=\"https://www.npmjs.com/package/sprintf-js\">sprintf-js</a> format spec for when a key is generated that already exists. Does not add any text to the citekey otherwise. You <em>must</em> include <em>exactly one</em> of the placeholders <code>%(n)s</code> (number), <code>%(a)s</code> (alpha, lowercase) or <code>%(A)s</code> (alpha, uppercase). For the rest of the disambiguator you can use things like padding and extra text as sprintf-js allows. With start set to <code>1</code> the disambiguator is always included, even if there is no need for it when no duplicates exist. The default  format is <code>%(a)s</code>. </p>",
  "<code>shorttitle</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>n</code></td><td><i>number</i></td><td><p>number of words to select</p></td><td><code>3</code> </td></tr>\n<tr><td><code>m</code></td><td><i>number</i></td><td><p>number of words to capitalize. <code>0</code> means no words will be capitalized. Mind that existing capitals are not removed.</p></td><td><code>0</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The first <code>n</code> (default: 3) words of the title, apply capitalization to first <code>m</code> (default: 0) of those. </p>",
  "<code>shortyear</code>": "<p>The last 2 digits of the publication year </p>",
  "<code>title</code>": "<p>Capitalize all the significant words of the title, and concatenate them. For example, <code>An awesome paper on JabRef</code> will become <code>AnAwesomePaperJabref</code> </p>",
  "<code>type</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>allowed</code></td><td><code>artwork</code> / <code>audioRecording</code> / <code>bill</code> / <code>blogPost</code> / <code>book</code> / <code>bookSection</code> / <code>case</code> / <code>computerProgram</code> / <code>conferencePaper</code> / <code>dataset</code> / <code>dictionaryEntry</code> / <code>document</code> / <code>email</code> / <code>encyclopediaArticle</code> / <code>film</code> / <code>forumPost</code> / <code>hearing</code> / <code>instantMessage</code> / <code>interview</code> / <code>journalArticle</code> / <code>letter</code> / <code>magazineArticle</code> / <code>manuscript</code> / <code>map</code> / <code>newspaperArticle</code> / <code>patent</code> / <code>podcast</code> / <code>preprint</code> / <code>presentation</code> / <code>radioBroadcast</code> / <code>report</code> / <code>standard</code> / <code>statute</code> / <code>thesis</code> / <code>tvBroadcast</code> / <code>videoRecording</code> / <code>webpage</code> / <code>classic</code> / <code>gazette</code> / <code>legalCommentary</code> / <code>regulation</code> / <code>treaty</code></td><td><p>one or more item type names</p></td><td></td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>Without arguments, returns the item type. When arguments as passed, tests whether the item is of any of the given types, and skips to the next pattern if not, eg <code>type(book) + veryshorttitle | auth + year</code>. </p>",
  "<code>veryshorttitle</code>": "\n          <details class=\"details\"><summary class=\"summary\">parameters:</summary>\n          <table>\n            <thead><tr><th>parameter</th><th>type</th><th>description</th><th>default</th></tr></thead>\n            <tbody>\n              <tr><td><code>n</code></td><td><i>number</i></td><td><p>number of words to select</p></td><td><code>1</code> </td></tr>\n<tr><td><code>m</code></td><td><i>number</i></td><td><p>number of words to capitalize. <code>0</code> means no words will be capitalized. Mind that existing capitals are not removed.</p></td><td><code>0</code> </td></tr>\n            </tbody>\n          </table>\n          </details>\n        <p>The first <code>n</code> words of the title, apply capitalization to first <code>m</code> of those </p>",
  "<code>year</code>": "<p>The year of the publication </p>",
  "<code>zotero</code>": "<p>Generates citation keys as the stock Zotero Bib(La)TeX export does. Note that this pattern inherits all the problems of the original Zotero citekey generation -- you should really only use this if you have existing papers that rely on this behavior. </p>"
}